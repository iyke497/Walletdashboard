"""Enhance models with improved relationships and constraints

Revision ID: 6bc93b6766a6
Revises: 8de83ba7039b
Create Date: 2025-05-01 12:34:33.307060

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6bc93b6766a6'
down_revision = '8de83ba7039b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('assets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('coingecko_id', sa.String(length=50), nullable=False),
    sa.Column('decimals', sa.Integer(), nullable=True),
    sa.Column('asset_type', sa.Enum('CRYPTO', 'FIAT', name='assettype'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('assets', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_assets_coingecko_id'), ['coingecko_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_assets_symbol'), ['symbol'], unique=True)

    op.create_table('deposit_addresses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('asset_id', sa.Integer(), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=False),
    sa.Column('network', sa.Enum('ETHEREUM', 'BITCOIN', 'BINANCE_SMART_CHAIN', 'POLYGON', 'SOLANA', 'AVALANCHE', 'COSMOS', 'OTHER', name='networktype'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['assets.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('address')
    )
    with op.batch_alter_table('deposit_addresses', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_deposit_addresses_asset_id'), ['asset_id'], unique=False)

    op.create_table('exchange_rates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('base_asset_id', sa.Integer(), nullable=False),
    sa.Column('quote_asset_id', sa.Integer(), nullable=False),
    sa.Column('rate', sa.Numeric(precision=30, scale=18), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('source', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['base_asset_id'], ['assets.id'], ),
    sa.ForeignKeyConstraint(['quote_asset_id'], ['assets.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('base_asset_id', 'quote_asset_id', 'timestamp', name='uq_rate_assets_time')
    )
    with op.batch_alter_table('exchange_rates', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_exchange_rates_base_asset_id'), ['base_asset_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_exchange_rates_quote_asset_id'), ['quote_asset_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_exchange_rates_timestamp'), ['timestamp'], unique=False)

    op.create_table('holdings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('asset_id', sa.Integer(), nullable=False),
    sa.Column('balance', sa.Numeric(precision=30, scale=18), nullable=True),
    sa.Column('cost_basis', sa.Numeric(precision=30, scale=18), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint('balance >= 0', name='ck_balance_non_negative'),
    sa.ForeignKeyConstraint(['asset_id'], ['assets.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'asset_id', name='uq_user_asset')
    )
    with op.batch_alter_table('holdings', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_holdings_asset_id'), ['asset_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_holdings_user_id'), ['user_id'], unique=False)

    op.create_table('staking_positions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('asset_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=30, scale=18), nullable=False),
    sa.Column('locked_until', sa.DateTime(), nullable=True),
    sa.Column('apy', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('provider', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint('amount > 0', name='ck_staking_amount_positive'),
    sa.ForeignKeyConstraint(['asset_id'], ['assets.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('staking_positions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_staking_positions_asset_id'), ['asset_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_staking_positions_user_id'), ['user_id'], unique=False)

    op.create_table('transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('asset_id', sa.Integer(), nullable=False),
    sa.Column('tx_type', sa.Enum('DEPOSIT', 'WITHDRAW', 'TRADE_BUY', 'TRADE_SELL', 'STAKE', 'UNSTAKE', 'FEE', 'TRANSFER', name='transactiontype'), nullable=False),
    sa.Column('amount', sa.Numeric(precision=30, scale=18), nullable=False),
    sa.Column('fee_amount', sa.Numeric(precision=30, scale=18), nullable=True),
    sa.Column('fee_asset_id', sa.Integer(), nullable=True),
    sa.Column('price', sa.Numeric(precision=30, scale=18), nullable=True),
    sa.Column('quote_asset_id', sa.Integer(), nullable=True),
    sa.Column('fiat_conversion_rate', sa.Numeric(precision=20, scale=8), nullable=True),
    sa.Column('fiat_conversion_asset_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('external_tx_id', sa.String(length=255), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint('amount > 0', name='ck_transaction_amount_positive'),
    sa.CheckConstraint('fee_amount >= 0', name='ck_fee_amount_non_negative'),
    sa.ForeignKeyConstraint(['asset_id'], ['assets.id'], ),
    sa.ForeignKeyConstraint(['fee_asset_id'], ['assets.id'], ),
    sa.ForeignKeyConstraint(['fiat_conversion_asset_id'], ['assets.id'], ),
    sa.ForeignKeyConstraint(['quote_asset_id'], ['assets.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('transactions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_transactions_asset_id'), ['asset_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_transactions_external_tx_id'), ['external_tx_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_transactions_quote_asset_id'), ['quote_asset_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_transactions_timestamp'), ['timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_transactions_tx_type'), ['tx_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_transactions_user_id'), ['user_id'], unique=False)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('display_currency_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('deleted_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               nullable=False)
        batch_op.create_foreign_key('fk_users_display_currency_id_assets', 'assets', ['display_currency_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint('fk_users_display_currency_id_assets', type_='foreignkey')
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               nullable=True)
        batch_op.drop_column('deleted_at')
        batch_op.drop_column('updated_at')
        batch_op.drop_column('display_currency_id')

    with op.batch_alter_table('transactions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_transactions_user_id'))
        batch_op.drop_index(batch_op.f('ix_transactions_tx_type'))
        batch_op.drop_index(batch_op.f('ix_transactions_timestamp'))
        batch_op.drop_index(batch_op.f('ix_transactions_quote_asset_id'))
        batch_op.drop_index(batch_op.f('ix_transactions_external_tx_id'))
        batch_op.drop_index(batch_op.f('ix_transactions_asset_id'))

    op.drop_table('transactions')
    with op.batch_alter_table('staking_positions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_staking_positions_user_id'))
        batch_op.drop_index(batch_op.f('ix_staking_positions_asset_id'))

    op.drop_table('staking_positions')
    with op.batch_alter_table('holdings', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_holdings_user_id'))
        batch_op.drop_index(batch_op.f('ix_holdings_asset_id'))

    op.drop_table('holdings')
    with op.batch_alter_table('exchange_rates', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_exchange_rates_timestamp'))
        batch_op.drop_index(batch_op.f('ix_exchange_rates_quote_asset_id'))
        batch_op.drop_index(batch_op.f('ix_exchange_rates_base_asset_id'))

    op.drop_table('exchange_rates')
    with op.batch_alter_table('deposit_addresses', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_deposit_addresses_asset_id'))

    op.drop_table('deposit_addresses')
    with op.batch_alter_table('assets', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_assets_symbol'))
        batch_op.drop_index(batch_op.f('ix_assets_coingecko_id'))

    op.drop_table('assets')
    # ### end Alembic commands ###
